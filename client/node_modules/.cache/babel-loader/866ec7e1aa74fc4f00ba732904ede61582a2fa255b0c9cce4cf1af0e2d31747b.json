{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasab\\\\management-software\\\\client\\\\src\\\\components\\\\edit.js\",\n  _s = $RefreshSig$();\n// components/edit.js\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport Navbar from './navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5050/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n    }\n    fetchData();\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(key, value) {\n    setForm(prev => {\n      return {\n        ...prev,\n        [key]: value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5050/record/${params.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"updatedRecord\",\n    style: {\n      marginLeft: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Actualizar Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nombre: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm(\"name\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          children: \"Cargo: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"position\",\n          value: form.position,\n          onChange: e => updateForm(\"position\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"level\",\n          children: \"Nivel: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"level\",\n          value: form.level,\n          onChange: e => updateForm(\"level\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Record\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"yJlUZlyyTGOtzeEm3fh3M9BjJrQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Navbar","jsxDEV","_jsxDEV","Edit","_s","form","setForm","name","position","level","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","key","value","prev","onSubmit","e","preventDefault","editedPerson","method","body","JSON","stringify","headers","className","style","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/wasab/management-software/client/src/components/edit.js"],"sourcesContent":["// components/edit.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport Navbar from './navbar';\r\n\r\nexport default function Edit() {\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    position: \"\",\r\n    level: \"\",\r\n    records: [],\r\n  });\r\n\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(`http://localhost:5050/record/${params.id.toString()}`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const record = await response.json();\r\n\r\n      if (!record) {\r\n        window.alert(`Record with id ${id} not found`);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      setForm(record);\r\n    }\r\n\r\n    fetchData();\r\n  }, [params.id, navigate]);\r\n\r\n  // These methods will update the state properties.\r\n  function updateForm(key, value) {\r\n    setForm((prev) => {\r\n      return { ...prev, [key]: value };\r\n    });\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    const editedPerson = {\r\n      name: form.name,\r\n      position: form.position,\r\n      level: form.level,\r\n    };\r\n\r\n    // This will send a post request to update the data in the database.\r\n    await fetch(`http://localhost:5050/record/${params.id}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(editedPerson),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    navigate(\"/\");\r\n  }\r\n\r\n  // This following section will display the form that takes input from the user to update the data.\r\n  return (\r\n    <div className=\"updatedRecord\" style={{  marginLeft: \"20px\" }}>\r\n      <Navbar/>\r\n      <h3>Actualizar Usuario</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Nombre: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            value={form.name}\r\n            onChange={(e) => updateForm(\"name\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"position\">Cargo: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"position\"\r\n            value={form.position}\r\n            onChange={(e) => updateForm(\"position\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"level\">Nivel: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"level\"\r\n            value={form.level}\r\n            onChange={(e) => updateForm(\"level\", e.target.value)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Record\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}